---
image: docker:stable

services:
- docker:dind

.docker_login_gitlab: &docker_login_gitlab |
  echo "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" --password-stdin "$CI_REGISTRY"

.docker_login_dockerhub: &docker_login_dockerhub |
  echo "$CI_DOCKER_REGISTRY_PASSWORD" | docker login -u "$CI_DOCKER_REGISTRY_USER" --password-stdin "$CI_DOCKER_REGISTRY"

stages:
- build
- verify

before_script:
  - export KUBECONFIG=$CI_PROJECT_DIR/.kube/config

build-master-gitlab:
  stage: build
  script:
  - *docker_login_gitlab
  - docker build -f build/Dockerfile --pull -t "$CI_REGISTRY_IMAGE:latest" .
  - docker push "$CI_REGISTRY_IMAGE"
  only:
    refs:
    - master

build-master-dockerhub:
  stage: build
  script:
  - *docker_login_dockerhub
  - docker build -f build/Dockerfile --pull -t "$CI_DOCKER_REGISTRY_IMAGE:latest" .
  - docker push "$CI_DOCKER_REGISTRY_IMAGE"
  only:
    refs:
    - master

build-dockerhub:
  stage: build
  script:
  - *docker_login_dockerhub
  - docker build -f build/Dockerfile --pull -t "$CI_DOCKER_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME" .
  - docker push "$CI_DOCKER_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME"
  except:
    refs:
    - master

build-gitlab:
  stage: build
  script:
  - *docker_login_gitlab
  - docker build -f build/Dockerfile --pull -t "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME" .
  - docker push "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME"
  except:
    refs:
    - master

verify-services:
  stage: verify
  image: google/cloud-sdk:latest
  before_script:
    - apt-get update && apt-get install -y curl sudo
    - curl -sfL https://get.k3s.io | sh -
    - sudo chmod +r /etc/rancher/k3s/k3s.yaml
    - export KUBECONFIG=/etc/rancher/k3s/k3s.yaml
    - sudo apt-get install -y open-iscsi
    - curl https://get.helm.sh/helm-v3.1.2-linux-amd64.tar.gz | tar xfz -
    - sudo mv linux-amd64/helm /usr/local/bin/helm
    - kubectl apply -f ./quickstart/longhorn/longhorn/deploy/longhorn.yaml
    - sleep 60 # Wait for 1 minute after applying Longhorn YAML
    - helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
    - helm repo update
    - ./quickstart/prometheus/install.sh
    - sleep 60 # Wait for 1 minute after running Prometheus installation script
    - RATING_NAMESPACE=rating hack/install.sh
    - sudo kubectl config set-context --current --namespace=rating
  script:
    - nohup ./hack/forward-api &
    - nohup ./hack/forward-prometheus &
    - nohup ./hack/forward-grafana &
    - sleep 5 # wait for port-forwarding to establish
    - |
      API_RESPONSE=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:5012)
      if [ "$API_RESPONSE" -ne 200 ]; then
        echo "Failed to access API on port 5012. Status code: $API_RESPONSE"
        exit 1
      fi
    - |
      PROMETHEUS_RESPONSE=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:9090)
      if [ "$PROMETHEUS_RESPONSE" -ne 200 ]; then
        echo "Failed to access Prometheus on port 9090. Status code: $PROMETHEUS_RESPONSE"
        exit 1
      fi
    - |
      GRAFANA_RESPONSE=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:3000)
      if [ "$GRAFANA_RESPONSE" -ne 200 ]; then
        echo "Failed to access Grafana on port 3000. Status code: $GRAFANA_RESPONSE"
        exit 1
      fi
  only:
    refs:
    - v3-test

