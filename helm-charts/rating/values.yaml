token:
  admin: thisisadmintoken
api:
  affinity: {}
  config:
    postgres_hostname: "{{ .Release.Name }}-postgresql-headless"
    postgres_secret: "{{ .Release.Name }}-postgresql"
  image:
    pullPolicy: Always
    repository: hub.rnd.alterway.fr/overboard/5gbiller/rating-api
    tag: master
  name: api
  nodeSelector: {}
  resources: {}
  service:
    port: 80
    type: ClusterIP
  storage:
    # storageClass: rook-ceph-block
    storageClass: longhorn
  tolerations: []
fullnameOverride: null
ingress:
  annotations: {}
  enabled: false
  hosts:
    - host: chart-example.local
      paths: []
  tls: []
metering:
  presto_database_uri: presto://root@presto.metering:8080/hive/metering
nameOverride: null
networkPolicy:
  enabled: false
postgresql:
  enabled: true
processing:
  affinity: {}
  config:
    postgres_hostname: "{{ .Release.Name }}-postgresql-headless"
    postgres_secret: "{{ .Release.Name }}-postgresql"
  image:
    pullPolicy: Always
    repository: hub.rnd.alterway.fr/overboard/5gbiller/processing-operator
    tag: master
  name: processing
  nodeSelector: {}
  resources: {}
  tolerations: []
rbac:
  create: true
service:
  port: 80
  type: ClusterIP
reactive:
  affinity: {}
  config:
    postgres_hostname: "{{ .Release.Name }}-postgresql-headless"
    postgres_secret: "{{ .Release.Name }}-postgresql"
  image:
    pullPolicy: Always
    repository: hub.rnd.alterway.fr/overboard/5gbiller/reactive-operator
    tag: master
  name: reactive
  nodeSelector: {}
  resources: {}
  tolerations: []
frontend:
  url: "http://localhost:3000"
  allowOrigin: "*"
  grafana:
    enabled: "true"
    password: prom-operator
    backend: "prometheus-grafana.monitoring.svc.cluster.local:80"
  name: frontend
  image:
    pullPolicy: Always
    repository: hub.rnd.alterway.fr/overboard/5gbiller/rating-front
    tag: master
  service:
    type: ClusterIP
    port: 80

  nodeSelector: {}
  tolerations: []
  affinity: {}
  resources: {}
