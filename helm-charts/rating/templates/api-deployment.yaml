---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "rating.operator.api.fullname" . }}
  labels:
    app: {{ include "rating.operator.api.fullname" . }}
    app.kubernetes.io/name: {{ include "rating.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/component: api
    {{- include "rating.labels" . | nindent 4 }}

spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: {{ include "rating.operator.api.fullname" . }}
      app.kubernetes.io/name: {{ include "rating.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
      app.kubernetes.io/component: api
      {{- include "rating.labels" . | nindent 6 }}
  template:
    metadata:
      labels:
        app: {{ include "rating.operator.api.fullname" . }}
        app.kubernetes.io/name: {{ include "rating.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/component: api
        {{- include "rating.labels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ include "rating.fullname" . }}-{{ .Release.Namespace }}
      automountServiceAccountToken: True
    {{- if .Values.api.pullSecretsName }}
      imagePullSecrets:
        - name: {{ .Values.api.pullSecretsName }}
    {{ end }}
      initContainers:
        - name: config-init-rates
          image: busybox:1.31.0
          volumeMounts:
          - mountPath: "/config/rates"
            name: config-rates
            readOnly: false
          - mountPath: "/config/rates-t0"
            name: config-rates-t0
            readOnly: true
          command: ["sh", "-c", "/bin/cp -a /config/rates-t0 /config/rates/0; /bin/chown -R 1000 /config/rates"]
      containers:
        - name: api
          image: "{{ .Values.api.image.repository }}:{{ .Values.api.image.tag }}"
          imagePullPolicy: {{ .Values.api.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 5012
          args: ["./entrypoint.sh"]
          env:
            - name: VERSION
              value: "{{ .Values.security.version }}"
            - name: DISTRIBUTION
              value: "{{ .Values.security.distribution }}"
            - name: AUTH
              value: "{{ .Values.security.auth }}"
            - name: AUTH_METHOD
              value: "{{ .Values.security.authentication_type }}"
            - name: RATING_API_URL
              value: {{ include "rating.operator.api.fullname" . }}-{{ .Release.Namespace }}
            {{- if eq .Values.security.authentication_type "ldap" }}
            - name: LDAP
              value: "true"
            - name: LDAP_URL
              value: {{ .Values.security.ldap.serverUrl }}
            - name: LDAP_ADMIN_PASSWORD
              value: {{ .Values.security.ldap.adminpassword }}
            - name: LDAP_SCHEMA
              value: {{ .Values.security.ldap.ldap_schema }}
            {{- else }}
            - name: LDAP
              value: "false"
            {{ end }}  
            {{- if eq .Values.security.authentication_type "keycloak" }}
            - name: KEYCLOAK
              value: "true"
            - name: KEYCLOAK_URL
              value: {{ .Values.security.keycloak.serverUrl }}
            - name: KEYCLOAK_REALM
              value: {{ .Values.security.keycloak.realmName }}
            - name: KEYCLOAK_CLIENT_ID
              value: {{ .Values.security.keycloak.clientID }}
            - name: KEYCLOAK_SECRET_KEY
              value: {{ .Values.security.keycloak.clientSecretKey }}
            {{- else }}
            - name: KEYCLOAK
              value: "false"
            {{ end }}
            - name: DASHBOARD_MENU_URL
              value: "http://localhost:3000"
            - name: ADMIN_ACCOUNT
              value: {{ .Values.security.adminAccount }}
            - name: FRONTEND_URL
              value: {{ .Values.frontend.url }}
            {{- if eq .Values.grafana.enabled "true" }}
            - name: GRAFANA
              value: "true"
            - name: GRAFANA_BACKEND_URL
              value: {{ .Values.frontend.grafana.backend }}
            - name: GRAFANA_ADMIN_PASSWORD
              value: {{ .Values.frontend.grafana.password }}
            - name: DOMAIN
              value: {{ .Values.frontend.grafana.env.domain }}
            - name: COOKIE_SAMESITE
              value: {{ .Values.frontend.grafana.env.samesite }}
            {{- if eq .Values.frontend.grafana.env.secure "true" }}
            - name: COOKIE_SECURE
              value: "true"
            {{- else }}
            - name: COOKIE_SECURE
              value: "false"
            {{- end }}

            {{- if eq .Values.frontend.grafana.env.httponly "true" }}
            - name: COOKIE_HTTPONLY
              value: "true"
            {{- else }}
            - name: COOKIE_HTTPONLY
              value: "false"
            {{- end }}

            {{- else }}
            - name: GRAFANA
              value: "false"
            {{ end }}
            - name: ALLOW_ORIGIN
              value: {{ .Values.frontend.allowOrigin }}
            - name: RATING_NAMESPACE
              value: {{ .Release.Namespace }}
            - name: RATING_RATES_DIR
              value: "/config/rates"
            - name: POSTGRES_USER
              value: postgres
            - name: POSTGRES_HOSTNAME
              value: "{{ tpl .Values.api.config.postgres_hostname $ }}"
            - name: POSTGRES_PORT
              value: "5432"
            - name: POSTGRES_DATABASE
              value: postgres
            - name: POSTGRES_DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: "{{ tpl .Values.api.config.postgres_secret $ }}"
                  key: postgresql-password
            - name: PRESTO_DATABASE_URI
              valueFrom:
                secretKeyRef:
                  name: {{ include "rating.fullname" . }}
                  key: PRESTO_DATABASE_URI
          volumeMounts:
          - mountPath: "/config/rates"
            name: config-rates
            readOnly: false
          livenessProbe:
            httpGet:
              path: /alive
              port: api
            initialDelaySeconds: 10
            periodSeconds: 10
          resources:
            {{- toYaml .Values.api.resources | nindent 12 }}
      {{- with .Values.api.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.api.affinity }}
        affinity:
          {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.api.tolerations }}
        tolerations:
          {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
      - name: config-rates-t0
        configMap:
          name: {{ include "rating.fullname" . }}-config-rates-t0
      - name: config-rates
        persistentVolumeClaim:
          claimName: {{ include "rating.fullname" . }}-config-rates
